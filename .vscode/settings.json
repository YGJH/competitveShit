{
  "workbench.colorTheme": "Tokyo Night Storm",
  "clang-format.executable": "C:\\Program Files\\LLVM\\bin\\clang-format.exe",
  "editor.mouseWheelZoom": true,
  "[cpp]": {
      "editor.defaultFormatter": "xaver.clang-format"
  },
  "C_Cpp.clang_format_sortIncludes": true,
  "editor.dragAndDrop": false,
  "files.autoSave": "afterDelay",
  "window.menuBarVisibility": "compact",
  "editor.renderWhitespace": "all",
  "workbench.sideBar.location": "left",
  "vim.commandLineModeKeyBindingsNonRecursive": [
      {
          "vim.easymotion": true,
          "vim.incsearch": true,
          "vim.useSystemClipboard": true,
          "vim.useCtrlKeys": true,
          "vim.hlsearch": true,
          "vim.insertModeKeyBindings": [
            {
              "before": ["j", "j"],
              "after": ["<Esc>"]
            }
          ],
          "vim.normalModeKeyBindingsNonRecursive": [
            {
              "before": ["<leader>", "d"],
              "after": ["d", "d"]
            },
            {
              "before": ["<C-n>"],
              "commands": [":nohl"]
            },
            {
              "before": ["K"],
              "commands": ["lineBreakInsert"],
              "silent": true
            }
          ],
          "vim.leader": "<space>",
          "vim.handleKeys": {
            "<C-a>": false,
            "<C-f>": false
          },
        
          "// To improve performance":
          "extensions.experimental.affinity", 
            "vscodevim.vim": 1
        } 
  ],
  "C_Cpp.errorSquiggles": "disabled",
  "files.associations": {
    "iostream": "cpp",
    "cmath": "cpp",
    "iomanip": "cpp",
    "chrono": "cpp",
    "span": "cpp",
    "type_traits": "cpp",
    "tuple": "cpp",
    "ostream": "cpp",
    "iosfwd": "cpp",
    "bitset": "cpp",
    "algorithm": "cpp",
    "format": "cpp",
    "array": "cpp",
    "deque": "cpp",
    "forward_list": "cpp",
    "list": "cpp",
    "string": "cpp",
    "unordered_map": "cpp",
    "unordered_set": "cpp",
    "vector": "cpp",
    "string_view": "cpp",
    "rope": "cpp",
    "slist": "cpp",
    "generator": "cpp",
    "initializer_list": "cpp",
    "ranges": "cpp",
    "stacktrace": "cpp",
    "text_encoding": "cpp",
    "regex": "cpp",
    "valarray": "cpp",
    "*.tcc": "cpp",
    "any": "cpp",
    "system_error": "cpp",
    "complex": "cpp",
    "random": "cpp",
    "limits": "cpp",
    "utility": "cpp",
    "xstring": "cpp",
    "ios": "cpp",
    "xtree": "cpp",
    "xutility": "cpp",
    "memory": "cpp",
    "xiosbase": "cpp",
    "xlocmon": "cpp",
    "xmemory": "cpp",
    "numeric": "cpp",
    "atomic": "cpp",
    "barrier": "cpp",
    "bit": "cpp",
    "cctype": "cpp",
    "cfenv": "cpp",
    "charconv": "cpp",
    "cinttypes": "cpp",
    "clocale": "cpp",
    "codecvt": "cpp",
    "compare": "cpp",
    "concepts": "cpp",
    "condition_variable": "cpp",
    "coroutine": "cpp",
    "csetjmp": "cpp",
    "csignal": "cpp",
    "cstdarg": "cpp",
    "cstddef": "cpp",
    "cstdint": "cpp",
    "cstdio": "cpp",
    "cstdlib": "cpp",
    "cstring": "cpp",
    "ctime": "cpp",
    "cuchar": "cpp",
    "cwchar": "cpp",
    "cwctype": "cpp",
    "map": "cpp",
    "set": "cpp",
    "exception": "cpp",
    "expected": "cpp",
    "functional": "cpp",
    "iterator": "cpp",
    "memory_resource": "cpp",
    "optional": "cpp",
    "ratio": "cpp",
    "source_location": "cpp",
    "fstream": "cpp",
    "future": "cpp",
    "istream": "cpp",
    "latch": "cpp",
    "mutex": "cpp",
    "new": "cpp",
    "numbers": "cpp",
    "print": "cpp",
    "scoped_allocator": "cpp",
    "semaphore": "cpp",
    "shared_mutex": "cpp",
    "spanstream": "cpp",
    "sstream": "cpp",
    "stdexcept": "cpp",
    "stdfloat": "cpp",
    "stop_token": "cpp",
    "streambuf": "cpp",
    "syncstream": "cpp",
    "thread": "cpp",
    "typeindex": "cpp",
    "typeinfo": "cpp",
    "variant": "cpp"
  },
  "cmake.configureOnOpen": false
}